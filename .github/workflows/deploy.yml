name: Deploy com verificação de segurança

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Criar diretório de relatórios
        run: mkdir -p reports

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/
 
      # Gitleaks check
      - name: Verificação de Segredos (Gitleaks)
        uses: gitleaks/gitleaks-action@v4.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sarif-output: 'reports/gitleaks-report.sarif'
          exit-code: '2'
          redact: true
          verbose: true
      
      #Verificação de dependencias
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: SQLInjection Test
          path: .
          format: SARIF
          out: reports

      # Análise estática PHP
      - name: Segurança - Análise Estática PHP
        uses: docker://ghcr.io/phpstan/phpstan
        with:
          args: analyse --level=max --error-format=github --error-format=json > reports/phpstan-report.json
        continue-on-error: true

      # Upload de todos os relatórios SARIF
      - name: Segurança - Upload de Relatórios
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: |
            reports/dependency-check-report.sarif
            reports/gitleaks-report.sarif