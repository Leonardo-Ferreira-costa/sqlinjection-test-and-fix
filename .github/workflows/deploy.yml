name: Deploy com verificação de segurança

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write # Permite enviar relatórios de segurança (SARIF)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Criar diretório reports
        run: mkdir -p reports

      - name: Segurança - Verificação de Segredos
        uses: gitleaks/gitleaks-action@v2.3.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          output: 'gitleaks-report.sarif'

      - name: Segurança - Análise de Dependências (OWASP)
        uses: dependency-check/Dependency-Check_Action@main
        env:
          # actions/setup-java@v1 changes JAVA_HOME so it needs to be reset to match the depcheck image
          JAVA_HOME: /opt/jdk
        with:
          project: 'SQLInjection Test'
          scan-dir: '.'
          format: 'SARIF'
          output: 'reports/owasp-report.sarif'  # Gera em um subdiretório

      # - name: Upload relatório OWASP
      #   uses: github/codeql-action/upload-sarif@v2.21.3
      #   with:
      #     project: 'PHP SQLInjection'
      #     scan-dir: '.'
      #     format: SARIF
      #     output: 'reports/owasp-report.sarif'  # Gera em um subdiretório
      
      # Análise estática PHP
      - name: Segurança - Análise Estática PHP
        uses: docker://ghcr.io/phpstan/phpstan
        with:
          args: analyse --level=max --error-format=github ${{ inputs.php-path || '.' }}
          output: 'phpstan-report.sarif'
        continue-on-error: true

          # Upload dos resultados para GitHub Security
      - name: Segurança - Envio de Resultados para o GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'reports/sec-report.sarif'  # Caminho relativo